@charset "UTF-8";
/* =========================================
   CSS 초기화 (Modern CSS Reset)
   ========================================= */
/**
 * 브라우저마다 다른 기본 스타일을 통일시켜,
 * 어떤 환경에서든 예측 가능하고 일관된 스타일링을 보장합니다.
 * 메인 SCSS 파일에서 가장 먼저 import 되어야 합니다.
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
}

h1, h2, h3, h4, h5, h6, p, ul, ol, li {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

img,
video,
canvas,
svg {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

/* _mainNavbar.scss 
 * 
 * 이 파일은 웹사이트의 상단 네비게이션 바의 모든 스타일을 담당합니다.
 * 코드는 크게 '데스크탑 기본 스타일'과 '모바일 화면 스타일'로 나뉩니다.
 *
 * [수정 핵심]
 * 1. 중복 정의되었던 .navbar 스타일을 하나로 통합하여 코드 충돌을 막았습니다.
 * 2. 데스크탑과 모바일 스타일을 @media 쿼리로 명확하게 분리하여 유지보수를 쉽게 만들었습니다.
 * 3. 요청하신 모든 시각적 문제(가로줄, 메뉴 정렬, 아이콘 색상)를 해결했습니다.
 */
.navbar {
  /**
    * [수정] 네비게이션 바의 배경을 투명하게 만들어,
    * body에 적용된 전체 페이지의 그라데이션 배경이 비치도록 합니다.
  * [수정] 부트스트랩의 기본 흰색 배경 스타일을 강제로 덮어쓰기 위해
    * background-color 속성 값 뒤에 !important를 추가합니다.
    * 이 작은 수정이 '톤앤매너가 깨지는' 현상을 해결해 줄 것입니다.
    */
  background-color: transparent !important;
  /**
   * [문제 1 해결] 불필요한 가로줄의 원인이었던 border 속성을 수정합니다.
   * 웹사이트의 전체 톤앤매너에 맞는 부드러운 색상(#E8E2D1)으로 하단에만 선을 추가하여
   * 콘텐츠 영역과 시각적으로 구분해주는 역할을 합니다.
   */
  border-bottom: 1px solid #E8E2D1;
  /**
   * [수정] padding(안쪽 여백) 값을 한 번만 명확하게 정의합니다.
   * padding: 12px 0; 은 '상하로는 12px, 좌우로는 0px'의 여백을 의미합니다.
   * 좌우 여백이 0인 이유는, 내부의 .container 클래스가 화면 크기에 맞춰
   * 콘텐츠의 좌우 여백을 자동으로 조절해주기 때문입니다.
   */
  padding: 12px 0;
}

/**
 * HTML의 .container 클래스가 로고와 메뉴를 양쪽으로 정렬해주므로,
 * .navbar에 직접 justify-content 같은 flex 속성을 강제로 덮어쓸 필요가 없습니다.
 * 이로써 부트스트랩의 기본 레이아웃 기능을 최대한 활용하게 됩니다.
 */
.navbar-nav .nav-link {
  color: #333;
  font-weight: bold;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.navbar-nav .nav-item > .nav-link:hover,
.navbar-nav .nav-item > .nav-link:focus {
  color: #e48c7a;
}

.dropdown-menu {
  background: linear-gradient(to bottom, #FCF8F0 0%, #E8E2D1 100%);
  border: 1px solid #E8E2D1;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
  border-radius: 0;
}

.dropdown-item {
  transition: all 0.3s ease;
}
.dropdown-item:hover, .dropdown-item:focus {
  color: #ffffff;
  background-color: #e48c7a;
}

.nav-link.dropdown-toggle::after {
  display: none;
}

@media (max-width: 991.98px) {
  .navbar-nav .nav-item.dropdown > .dropdown-menu,
  .navbar-nav .nav-item.dropdown > .dropdown-menu.show,
  .navbar-nav .nav-item.dropdown > .dropdown-menu.open,
  .navbar-nav .nav-item.dropdown > .dropdown-menu:focus,
  .navbar-nav .nav-item.dropdown > .dropdown-menu:active,
  .navbar-nav .nav-item.dropdown > .dropdown-menu:hover,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item.active,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item.show,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item.open,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item:focus,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item:active,
  .navbar-nav .nav-item.dropdown > .dropdown-menu .dropdown-item:hover,
  .navbar-nav .nav-item.dropdown > .dropdown-menu * {
    background: transparent !important;
    background-color: transparent !important;
    border: none !important;
    box-shadow: none !important;
  }
  .nav-link {
    background: transparent !important;
    background-color: transparent !important;
    box-shadow: none !important;
    border: none !important;
  }
  /**
   * .navbar-collapse: 햄버거 메뉴의 전체 컨테이너
   * .collapse.show: 햄버거 버튼을 클릭해서 메뉴가 펼쳐졌을 때 JS가 추가하는 클래스
   */
  .navbar-collapse.collapse.show {
    /**
     * [문제 1 해결] 불필요한 가로줄처럼 보였던 현상을 해결합니다.
     * 상단 여백(margin-top)을 주어 원래 네비게이션 바의 하단 테두리와 겹치지 않게 합니다.
     */
    margin-top: 12px;
    /**
     * 메뉴가 펼쳐졌을 때 뒤에 있는 캐러셀 이미지가 비치면 어지러우므로,
     * 반투명한 검정 배경(rgba)을 깔아 메뉴의 가독성을 높여줍니다.
     */
    background-color: rgba(0, 0, 0, 0.15);
    border-radius: 8px;
    padding: 1rem 1rem 0rem;
  }
  .navbar-nav .nav-link,
  .navbar-nav .dropdown-item {
    color: #ffffff !important;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.6);
    text-align: left;
    padding-left: 1rem;
    /* [추가] 모바일 메뉴의 상하 간격을 절반으로 줄입니다. */
    padding-top: -2.5rem !important;
    padding-bottom: 0.5rem !important;
  }
  .navbar-nav .nav-link:hover,
  .navbar-nav .nav-link:focus,
  .navbar-nav .dropdown-item:hover,
  .navbar-nav .dropdown-item:focus {
    background-color: transparent !important;
    color: #e48c7a !important;
  }
  .dropdown-menu {
    background-color: transparent !important;
    border: none !important;
    box-shadow: none !important;
    padding-left: 0.1rem;
  }
  .navbar-collapse .nav-item.dropdown {
    position: relative;
  }
  .navbar-collapse {
    position: relative;
  }
  .nav-item.dropdown .dropdown-menu {
    position: absolute;
    display: none;
    top: -3px;
    left: calc(var(--flyout-left-position, 150px) - 18px) !important;
    width: auto;
    min-width: 150px;
    padding-left: 0 !important;
    margin-left: 0 !important;
    background: rgba(20, 20, 20, 0.85);
    backdrop-filter: none !important;
    -webkit-backdrop-filter: none !important;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    padding: 0.5rem;
    margin-top: 0;
    z-index: 10;
    background: transparent !important;
    background-color: transparent !important;
    border: none !important;
    box-shadow: none !important;
  }
  .nav-item.dropdown .dropdown-menu.show {
    display: block;
  }
  .nav-item.dropdown .dropdown-menu .dropdown-item {
    padding: 0.5rem 1rem;
    text-align: left;
    color: #ffffff !important;
    background-color: transparent !important;
    border-bottom: none;
  }
  .nav-item.dropdown .dropdown-menu .dropdown-item:hover,
  .nav-item.dropdown .dropdown-menu .dropdown-item:focus {
    color: #e48c7a !important;
  }
  /**
   * [문제 3 해결] 햄버거 아이콘 색상을 원래대로 복구합니다.
   * 기존 코드에서 아이콘 색을 강제로 흰색으로 바꾸는 부분을 수정하여,
   * 어떤 배경에서든 잘 보이는 어두운 색 아이콘이 나오도록 합니다.
   */
  .navbar-toggler-icon {
    /**
     * 부트스트랩의 아이콘은 SVG 이미지로 되어 있습니다.
     * stroke='...' 부분의 색상 코드를 바꾸면 아이콘 색이 바뀝니다.
     * 여기서는 'rgba(51, 51, 51, 1)' (어두운 회색)으로 설정했습니다.
     */
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(51, 51, 51, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
  }
  .navbar-toggler {
    border-color: rgba(0, 0, 0, 0.1);
  }
}
/*
 * [추가] 햄버거 메뉴가 펼쳐졌을 때 (부모인 .navbar에 .show 클래스가 있는 자식이 있을 때)
 * 네비게이션 바 자체의 밑줄(border-bottom) 색상을 투명하게 만들어 보이지 않게 합니다.
 * 이것이 "쓸데없는 줄" 문제의 진짜 해결책일 가능성이 높습니다.
 */
.navbar:has(.navbar-collapse.show) {
  border-bottom-color: transparent !important;
}

/* =========================================
   메인 캐러셀 반응형 아트 디렉션 (최종 통합본)
   ========================================= */
#mainCarousel .carousel-item {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: right center; /* 데스크톱 기본 위치 */
}

/* =========================================
   특정 캐러셀 아이템 위치 미세 조정
   ========================================= */
/**
 * JS에서 추가한 '.slide-2-special-position' 클래스를 가진 요소에만
 * 별도의 background-position 값을 적용하여 위치를 조정합니다.
 */
#mainCarousel .slide-2-special-position {
  background-position: right calc(50% - 20vh);
}

#mainCarousel .slide-2-special-position.active .carousel-promo-text {
  color: pink;
}

@media (max-width: 768px) {
  #mainCarousel .carousel-item {
    background-position: 80% 20%; /* 모바일 기본 위치 */
  }
  #mainCarousel .slide-2-special-position {
    background-position: 80% calc(20% - 10vh);
  }
  /* =========================================
     [신규 추가] 모바일 캐러셀 아이템 위치 미세 조정
     ========================================= */
  /* =========================================     
  [신규 추가] main-slider-7 모바일 이미지 교체
   ========================================= */
  #mainCarousel .slide-7-position.mobile-replace-image-7 {
    background-image: url("../images/main-slider7b.png") !important;
    background-position: center center;
    background-size: cover;
  }
  #mainCarousel .slide-7-position.mobile-replace-image-7 #mainCarousel .carousel-item:nth-child(8) {
    background-position: calc(80% - 70px) 20%; /* 기존 모바일 위치에서 왼쪽으로 70px 이동 */
  }
  #mainCarousel .slide-7-position.mobile-replace-image-7 #mainCarousel .carousel-item:nth-child(3) {
    background-position: calc(80% - 30px) -20% !important;
  }
  #mainCarousel .slide-7-position.mobile-replace-image-7 #mainCarousel .carousel-item:nth-child(4) {
    background-position: calc(80% - 30px) 20%; /* 기존 모바일 위치에서 왼쪽으로 30px 이동 */
  }
}
.carousel-promo-text {
  position: absolute;
  bottom: calc(var(--consult-bar-height, 56px) + 13vh) !important;
  left: 0;
  width: 100%;
  text-align: center;
  color: #fff;
  z-index: 20;
  text-shadow: 5px 5px 10px rgba(0, 0, 0, 0.8);
}
.carousel-promo-text p {
  font-size: 7.2vw !important;
}

@media (min-width: 991.99px) {
  .carousel-promo-text {
    top: 50vh;
    transform: translateX(-10%);
    width: 40%;
  }
  .carousel-promo-text p {
    font-size: 3.9rem !important;
    line-height: 1.2;
  }
}
/* =========================================
   전역 스타일 및 변수 (Global Styles & Variables)
   ========================================= */
/**
 * 웹사이트 전체에서 사용될 색상, 폰트, 기본 레이아웃 등을 정의합니다.
 * CSS 변수(--variable)를 사용하면 나중에 색상이나 스타일을 한 번에 쉽게 변경할 수 있어 유지보수가 매우 편리해집니다.
 * 톤앤매너는 멘티님께서 설정하신 값을 존중하여 반영합니다.
 */
:root {
  /* 색상 변수 정의 */
  --color-primary: #FF6B6B; /* 멘티님의 톤앤매너 포인트 색상 */
  --color-text: #5B4F3C; /* 기본 텍스트 색상 */
  --color-background-start: #FCF8F0; /* 배경 그라데이션 시작 색 */
  --color-background-end: #E8E2D1; /* 배경 그라데이션 끝 색 */
  --color-form-bg: #F9F5E9; /* 폼 배경 색 */
  /* [신규] JavaScript가 실시간으로 채워줄 동적 높이 변수 */
  --navbar-height: 70px; /* 네비게이션 바 높이 (JS 로드 전 기본값) */
  --consult-bar-height: 80px; /* 하단 상담 바 높이 (JS 로드 전 기본값) */
}

body {
  background: linear-gradient(to bottom, var(--color-background-start) 0%, var(--color-background-end) 100%);
  font-family: "WandocleanseaB", sans-serif;
  /**
   * [수정] JavaScript가 계산한 네비바 높이만큼 body의 상단 안쪽 여백을 확보합니다.
   * 하단 padding은 이제 JS의 `setDynamicHeights` 함수에서 직접 관리합니다.
   * 이 코드가 없다면, position:fixed 된 요소들 때문에 페이지의 최상단 콘텐츠가 가려지게 됩니다.
   */
  padding-top: var(--navbar-height);
}

/* =========================================
   메인 캐러셀 반응형 아트 디렉션 (최종 통합본)
   ========================================= */
/**
 * 이 CSS 블록은 우리가 최종적으로 선택한 '배경 이미지' 기법을 위한 스타일입니다.
 * JavaScript가 동적으로 생성한 div.carousel-item에 배경 이미지를 설정하고,
 * 그 이미지가 모든 화면 크기에서 최적으로 보이도록 제어하는 모든 규칙이 담겨있습니다.
 *
 * [핵심 수정] 캐러셀 높이는 이제 JS에서 동적으로 계산하여 `#mainCarousel`에 직접 적용합니다.
 * 따라서 `.carousel-item`은 부모의 100% 높이를 따르도록 변경합니다.
 */
#mainCarousel {
  position: relative;
  width: 100%;
  overflow: hidden;
  /* height와 max-height는 이제 JS에서 adjustCarouselHeight 함수에서 동적으로 설정하므로 여기서는 제거합니다. */
}

#mainCarousel .carousel-item {
  height: 100%;
  max-height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: right center;
}

/* =========================================
   특정 캐러셀 아이템 위치 미세 조정 (데스크톱)
   ========================================= */
/**
 * JS에서 추가한 '.slide-X-position' 클래스를 가진 요소에만
 * 별도의 background-position 값을 적용하여 위치를 조정합니다.
 */
#mainCarousel .slide-2-position {
  /**
   * 데스크톱 기본 위치 조정
   * 가로 위치(right)는 유지하고, 세로 위치만 기본값(center, 50%)에서
   * calc() 함수를 이용해 1vh만큼 위로 올립니다.
   */
  background-position: right calc(50% - 10vh);
}

/* [기존 주석 유지] @media (max-width: 768px)는 "브라우저 화면 너비가 768px 이하일 경우에만 적용하라"는 규칙입니다. */
@media (max-width: 768px) {
  #mainCarousel .carousel-item {
    /* [수정] 모바일 기본 위치를 왼쪽으로 70px 이동 */
    background-position: calc(80% - 130px) 20%;
  }
  #mainCarousel .slide-2-position {
    background-position: 80% calc(20% - 3vh);
  }
  /* =========================================
     [신규 추가] main-slider-7 모바일 이미지 교체
     ========================================= */
  #mainCarousel .slide-7-position.mobile-replace-image-7 {
    background-image: url("../images/main-slider7b.png") !important;
  }
}
@media (max-width: 991px) {
  #mainCarousel .slide-3-position {
    background-size: auto 80vh;
    background-position: center 35%;
  }
}
/* =========================================
   하단 빠른 상담 바 (Quick Consultation Bar)
   ========================================= */
/**
 * [핵심 수정] HTML의 클래스명 변경에 따라 CSS 선택자를 .quick-consult-bar로 수정합니다.
 * position: fixed 속성을 사용하여 스크롤과 관계 없이 항상 화면 하단에 고정시킵니다.
 */
.quick-consult-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 1030;
  background: var(--color-form-bg);
  padding: 0.5rem 0;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease-in-out;
}

.consult-form {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.form-row {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.form-row {
  display: flex;
  gap: 0.5rem;
}

.second-row {
  display: flex;
  align-items: center;
  justify-content: center;
}

.form-item {
  flex: 1;
  min-width: 0;
}

.privacy-agreement {
  flex: 1 1 10%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
  font-size: 0.8rem;
}

.privacy-text {
  font-size: 0.8rem;
  line-height: 1;
}

.quick-consult-bar .form-control,
.quick-consult-bar .form-select,
.quick-consult-bar .btn-primary {
  margin: 0;
  padding: 0.3rem 0.5rem;
  height: 2rem;
  font-size: 0.9rem;
  border: 1px solid #DDD;
}

.quick-consult-bar .form-control,
.quick-consult-bar .form-select {
  background-color: white;
}

.quick-consult-bar .btn-primary {
  background-color: var(--color-primary);
  border: none;
}

.quick-consult-bar .btn-primary:hover {
  filter: brightness(0.9);
}

.quick-consult-bar .form-check-input {
  width: 1rem;
  height: 1rem;
  margin: 0;
  transform: scale(0.9);
}

/* 모바일 (최대 991.98px) */
@media (max-width: 991.98px) {
  .consult-form {
    gap: 0.2rem;
  }
  .form-row {
    gap: 0.3rem;
  }
  .privacy-agreement {
    gap: 0.2rem;
    font-size: 0.75rem;
  }
  .privacy-text {
    font-size: 0.75rem;
  }
  .second-row .privacy-agreement {
    flex: 0 0 35%;
  }
  .second-row .form-item {
    flex: 0 0 65%;
  }
  .quick-consult-bar .form-control,
  .quick-consult-bar .form-select,
  .quick-consult-bar .btn-primary {
    font-size: 0.85rem;
    height: 1.8rem;
    padding: 0.2rem 0.4rem;
  }
  .quick-consult-bar .form-check-input {
    transform: scale(0.8);
  }
}
/* 데스크탑 (992px 이상) */
@media (min-width: 992px) {
  .consult-form {
    flex-direction: row;
    gap: 0.8rem;
  }
  .form-row {
    flex: 1;
    gap: 0.8rem;
  }
  .privacy-agreement {
    gap: 0.4rem;
    font-size: 0.85rem;
  }
  .privacy-text {
    font-size: 0.85rem;
  }
  .quick-consult-bar .form-control,
  .quick-consult-bar .form-select,
  .quick-consult-bar .btn-primary {
    font-size: 0.9rem;
    height: 2.2rem;
    padding: 0.4rem 0.6rem;
  }
  .quick-consult-bar .form-check-input {
    transform: scale(1);
  }
}
/* =========================================
   로그인 모달 (Login Modal)
   ========================================= */
.modal-content {
  background: var(--color-form-bg);
}

.modal-body .form-control {
  background-color: white;
  border: 1px solid #DDD;
  margin-bottom: 1rem;
}

.carousel-promo-text {
  position: fixed;
  left: 0;
  width: 100vw;
  bottom: calc(var(--consult-bar-height) + 20px); /* 하단 바와의 간격 살짝 추가 */
  z-index: 1040;
  text-align: center;
  pointer-events: none;
  color: #FFFFFF; /* 글자 색상을 흰색으로 변경 */
  font-family: "WandocleanseaB", sans-serif;
  background: none;
  transition: bottom 0.3s;
  right: 0;
  padding: 0;
}

.carousel-promo-text p {
  margin: 0;
  font-size: 2.8rem; /* 글자 크기를 키움 */
  font-weight: 600;
  line-height: 1.3;
  letter-spacing: -0.02em;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5); /* 어두운 그림자로 변경하여 가독성 확보 */
}

@media (max-width: 991px) {
  .carousel-promo-text p {
    font-size: 2rem; /* 모바일 크기 비례하여 키움 */
  }
}
@media (max-width: 768px) {
  .carousel-promo-text p {
    font-size: 1.6rem; /* 모바일 크기 비례하여 키움 */
  }
}
/* =========================================
   CSS 초기화 (Modern CSS Reset)
   ========================================= */
/**
 * 브라우저마다 다른 기본 스타일을 통일시켜,
 * 어떤 환경에서든 예측 가능하고 일관된 스타일링을 보장합니다.
 * 메인 SCSS 파일에서 가장 먼저 import 되어야 합니다.
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
}

h1, h2, h3, h4, h5, h6, p, ul, ol, li {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

img,
video,
canvas,
svg {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

/* =========================================
   네비게이션 바 스타일
   ========================================= */
.navbar {
  background-color: #f8f9fa;
  padding: 0 20px;
  border-bottom: 1px solid #e7e7e7;
  display: flex;
  justify-content: center;
  /**
   * =========================================
   * [신규 추가] 네비게이션 바 상하 여백 3:2 비율 설정
   * =========================================
   */
  /**
   * 1. 비율 계산을 위한 '기본 단위'를 변수로 정의합니다.
   * 이 값(예: 10px)을 기준으로 3:2 비율을 계산합니다.
   * 나중에 이 값만 바꾸면 전체 여백이 비율을 유지한 채 조절됩니다.
   */
  --nav-margin-unit: 3px;
  /**
   * 2. calc() 함수를 사용하여 실제 margin 값을 계산합니다.
   * CSS 변수를 이용해 기본 단위에 원하는 비율 값을 곱합니다.
   */
  padding-top: calc(var(--nav-margin-unit) * 4);
  padding-bottom: calc(var(--nav-margin-unit) * 1.5);
}

/* =========================================
   내비게이션 바 (Navigation Bar)
   ========================================= */
/**
 * 부트스트랩의 기본 내비게이션 바 스타일을 덮어써서
 * 우리 웹사이트의 톤앤매너에 맞게 커스터마이징합니다.
 */
/* =========================================
   네비게이션 바 스타일 (반응형 단위로 수정)
   ========================================= */
.navbar {
  background-color: #f8f9fa;
  /* 20px -> 1.25rem */
  padding: 0 1.25rem;
  border-bottom: 1px solid #e7e7e7; /* 1px 테두리는 유지하는 것이 일반적입니다 */
  display: flex;
  justify-content: center;
  /**
   * =========================================
   * [수정] 네비게이션 바 상하 여백 단위를 rem으로 변경
   * =========================================
   */
  /**
   * 비율 계산을 위한 '기본 단위'를 rem으로 설정합니다.
   * 10px -> 0.625rem
   */
  --nav-margin-unit: 0.625rem;
  padding-top: calc(var(--nav-margin-unit) * 2);
  padding-bottom: calc(var(--nav-margin-unit) * 0.8);
}

/* =========================================
   메뉴 항목 스타일 (상위 메뉴)
   ========================================= */
.nav-item {
  position: relative;
}

.nav-link {
  display: block;
  /* 15px -> 0.9375rem, 20px -> 1.25rem */
  padding: 0.7375rem 1.25rem;
  color: #333;
  font-weight: bold;
  transition: background-color 0.3s ease;
  /* [추가] 공백(space)을 기준으로 자동 줄바꿈 되는 것을 방지합니다. */
}

.nav-item:hover .nav-link {
  background-color: #e7e7e7;
}

/* =========================================
   드롭다운 메뉴 스타일
   ========================================= */
.dropdown-menu {
  position: absolute;
  display: none;
  top: 100%;
  left: 0;
  background-color: #ffffff;
  border: 1px solid #e7e7e7;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  /* 180px -> 11.25rem */
  min-width: 11.25rem;
}

.nav-item:hover .dropdown-menu {
  display: block;
}

.dropdown-item a {
  display: block;
  /* 12px -> 0.75rem, 20px -> 1.25rem */
  padding: 0.75rem 1.25rem;
  color: #555;
  transition: background-color 0.3s ease;
}

.dropdown-item:hover a {
  background-color: #e7e7e7;
}

/* =========================================
   네비게이션 드롭다운 화살표 제거
   ========================================= */
/**
 * 부트스트랩은 .dropdown-toggle 클래스가 있는 링크에
 * ::after 가상 요소를 이용해 화살표(▼)를 자동으로 추가합니다.
 * 이 가상 요소의 display 속성을 'none'으로 설정하여 보이지 않게 만듭니다.
 */
.nav-link.dropdown-toggle::after {
  display: none;
}

/* =========================================
   전역 스타일 및 변수 (Global Styles & Variables)
   ========================================= */
/**
 * 웹사이트 전체에서 사용될 색상, 폰트, 기본 레이아웃 등을 정의합니다.
 * CSS 변수(--variable)를 사용하면 나중에 색상이나 스타일을 한 번에 쉽게 변경할 수 있어 유지보수가 매우 편리해집니다.
 * 톤앤매너는 멘티님께서 설정하신 값을 존중하여 반영합니다.
 */
:root {
  /* 색상 변수 정의 */
  --color-primary: #FF6B6B; /* 멘티님의 톤앤매너 포인트 색상 */
  --color-text: #5B4F3C; /* 기본 텍스트 색상 */
  --color-background-start: #FCF8F0; /* 배경 그라데이션 시작 색 */
  --color-background-end: #E8E2D1; /* 배경 그라데이션 끝 색 */
  --color-form-bg: #F9F5E9; /* 폼 배경 색 */
  /* [신규] JavaScript가 실시간으로 채워줄 동적 높이 변수 */
  --navbar-height: 70px; /* 네비게이션 바 높이 (JS 로드 전 기본값) */
  --consult-bar-height: 80px; /* 하단 상담 바 높이 (JS 로드 전 기본값) */
}

body {
  background: linear-gradient(to bottom, var(--color-background-start) 0%, var(--color-background-end) 100%);
  font-family: "WandocleanseaB", sans-serif;
  /**
   * [핵심 수정] JavaScript가 계산한 네비바와 상담바의 높이만큼 body의 상/하단 안쪽 여백을 확보합니다.
   * 이 코드가 없다면, position:fixed 된 요소들 때문에 페이지의 최상단과 최하단 콘텐츠가 가려지게 됩니다.
   */
  padding-top: var(--navbar-height);
  padding-bottom: var(--consult-bar-height);
}

/* =========================================
   메인 캐러셀 반응형 아트 디렉션 (최종 통합본)
   ========================================= */
/**
 * 이 CSS 블록은 우리가 최종적으로 선택한 '배경 이미지' 기법을 위한 스타일입니다.
 * JavaScript가 동적으로 생성한 div.carousel-item에 배경 이미지를 설정하고,
 * 그 이미지가 모든 화면 크기에서 최적으로 보이도록 제어하는 모든 규칙이 담겨있습니다.
 */
#mainCarousel .carousel-item {
  /* 이제 body에 padding이 생겨서 공간을 확보해주므로,
  * 캐러셀은 더 이상 복잡한 계산 없이 화면 전체 높이를 차지하면 됩니다.
  * 아주 간단하게 100vh로 변경합니다.
  */
  height: 100vh;
  /* max-height는 더 이상 필요 없으므로 삭제하거나 height와 동일하게 설정합니다. */
  max-height: 100vh;
  /* [기존 주석 유지] 배경 이미지가 찌그러지지 않으면서, div 영역을 빈틈없이 가득 채우도록 크기를 조절합니다. */
  background-size: cover;
  background-repeat: no-repeat;
  /* [기존 주석 유지] 넓은 화면에서 배경 이미지를 어떻게 위치시킬지 결정합니다. */
  background-position: right center; /* 데스크톱 기본 위치 */
}

/* =========================================
   특정 캐러셀 아이템 위치 미세 조정
   ========================================= */
/**
 * JS에서 추가한 '.slide-2-special-position' 클래스를 가진 요소에만
 * 별도의 background-position 값을 적용하여 위치를 조정합니다.
 */
#mainCarousel .slide-2-special-position {
  /**
   * 데스크톱 기본 위치 조정
   * 가로 위치(right)는 유지하고, 세로 위치만 기본값(center, 50%)에서
   * calc() 함수를 이용해 1vh만큼 위로 올립니다.
   */
  background-position: right calc(50% - 10vh);
}

/**
 * 모바일 화면에서도 동일하게 위치를 조정합니다.
 */
@media (max-width: 768px) {
  #mainCarousel .slide-2-special-position {
    /**
     * 모바일 기본 위치(80% 20%)를 기준으로,
     * 세로 위치(20%)만 calc()를 이용해 1vh만큼 위로 올립니다.
     */
    background-position: 80% calc(20% - 3vh);
  }
}
/* [기존 주석 유지] @media (max-width: 768px)는 "브라우저 화면 너비가 768px 이하일 경우에만 적용하라"는 규칙입니다. */
@media (max-width: 768px) {
  #mainCarousel .carousel-item {
    /* [기존 주석 유지] 모바일 화면에서 모델의 얼굴이 중앙에 아름답게 위치하게 됩니다. */
    background-position: 80% 20%;
  }
}
/* =========================================
   하단 빠른 상담 바 (Quick Consultation Bar)
   ========================================= */
/**
 * [핵심 수정] HTML의 클래스명 변경에 따라 CSS 선택자를 .quick-consult-bar로 수정합니다.
 * position: fixed 속성을 사용하여 스크롤과 관계 없이 항상 화면 하단에 고정시킵니다.
 */
.quick-consult-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 1030;
  background: var(--color-form-bg);
  padding: 1rem 0;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease-in-out;
}

/* [수정] 클래스 이름을 .quick-consult-bar 로 변경 */
.quick-consult-bar .form-control,
.quick-consult-bar .form-select {
  background-color: white;
  border: 1px solid #DDD;
}

/* [수정] 클래스 이름을 .quick-consult-bar 로 변경. 버튼 색상은 톤앤매너에 맞게 변수 사용 */
.quick-consult-bar .btn-primary {
  background-color: var(--color-primary);
  border: none;
}

.quick-consult-bar .btn-primary:hover {
  filter: brightness(0.9);
}

/* =========================================
   로그인 모달 (Login Modal)
   ========================================= */
.modal-content {
  background: var(--color-form-bg);
}

.modal-body .form-control {
  background-color: white;
  border: 1px solid #DDD;
  margin-bottom: 1rem;
} /*# sourceMappingURL=styles.css.map */